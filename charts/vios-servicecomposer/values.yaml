postgresql:
  # enabled is the flag to indicate of postgresql is to be used
  enabled: true

  # postgresqlDatabase is the database name to use
  postgresqlDatabase: servicecomposer

  # postgresqlUsername is the username to use
  postgresqlUsername: viosuser

  # postgresqlPassword is the password for the user
  postgresqlPassword: viospassword

config:
  # replicaCount is the number of replicas to use
  replicaCount: 1

  # appPort is the Django application port
  appPort: 8000

  # NodePort is the type of service
  type: NodePort

# extAppPort is the external port of the service mapped to internal port of the application
  extAppPort: 31001

  # dbName is the database name for the service
  dbName: servicecomposer

  # dbPort is the database port to be used for the service
  dbPort: 5432

  # dbEngine is the Django database engine to use
  dbEngine: django.db.backends.postgresql_psycopg2

  # debug is the Django debug flag
  debug: "True"

  # logLevel denotes the level of logging required
  logLevel: DEBUG

  # appSecretKey is the Django secret key
  appSecretKey: "$#xj4ysk$3l39qt$fcp0su*%eca+#s*n0caci1pkeatcif(n08"

  # systemEnv is the flag to denote the type of deployment environment
  systemEnv: KUBERNETES

image:
  # repository is the online location of the Docker image
  repository: ghcr.io/5g-victori-project/vios-servicecomposer

  # pullPolicy is the flag to determine how images are pulled
  pullPolicy: Always

  # tag is the version to use
  tag: latest

  # pullSecrets is the secret key to use to connect to Github
  pullSecrets: ['ghcr-5g-victori']

autoscaling:
  # enabled specifies whether autoscaling should be enabled
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""